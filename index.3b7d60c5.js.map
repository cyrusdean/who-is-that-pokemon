{"mappings":"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","sources":["<anon>","index.js"],"sourcesContent":["var $dad545c909cfec2d$exports = {};\nconst $dad545c909cfec2d$var$initialState = {\n    generations: {},\n    selectedGenerations: [],\n    pokemon: [],\n    selectedPokemon: null,\n    guessedPokemon: null,\n    status: \"ready\",\n    correctGuessesStreak: 0,\n    gameTimeout: null\n};\nlet $dad545c909cfec2d$var$state = {\n    ...$dad545c909cfec2d$var$initialState\n};\nconst $dad545c909cfec2d$var$randomNumUpTo = (max)=>Math.floor(Math.random() * (max + 1));\nconst $dad545c909cfec2d$var$updateGameStatus = (status)=>{\n    $dad545c909cfec2d$var$state.status = status;\n    const gameContainer = document.getElementById(\"gameContainer\");\n    gameContainer.className = status;\n};\nconst $dad545c909cfec2d$var$resetHTML = ()=>{\n    const guessingOptionsEl = document.getElementById(\"guessingOptions\");\n    guessingOptionsEl.innerHTML = \"\";\n    const answerEl = document.getElementById(\"answer\");\n    answerEl.innerText = \"\";\n    const pokemonImage = document.querySelector(\".pokemon-image\");\n    if (pokemonImage) pokemonImage.remove();\n};\nconst $dad545c909cfec2d$var$finishGame = ()=>{\n    const { selectedPokemon: selectedPokemon, guessedPokemon: guessedPokemon } = $dad545c909cfec2d$var$state;\n    const didNotGuess = !guessedPokemon;\n    const guessedCorrectly = selectedPokemon?.id === guessedPokemon?.id && !didNotGuess;\n    const { name: name } = selectedPokemon;\n    const answerEl = document.getElementById(\"answer\");\n    answerEl.innerText = `It's ${name}!`;\n    const correctGuessesStreakEl = document.getElementById(\"streakCount\");\n    if (guessedCorrectly) $dad545c909cfec2d$var$state.correctGuessesStreak++;\n    else $dad545c909cfec2d$var$state.correctGuessesStreak = 0;\n    correctGuessesStreakEl.innerText = $dad545c909cfec2d$var$state.correctGuessesStreak;\n    const { generations: generations, selectedGenerations: selectedGenerations, pokemon: initialPokemon, correctGuessesStreak: correctGuessesStreak, ...restInitialState } = $dad545c909cfec2d$var$initialState;\n    $dad545c909cfec2d$var$state = {\n        ...$dad545c909cfec2d$var$state,\n        ...restInitialState\n    };\n    $dad545c909cfec2d$var$updateGameStatus(\"viewing-result\");\n    $dad545c909cfec2d$var$state.gameTimeout = setTimeout($dad545c909cfec2d$var$startGame, 3000);\n};\nconst $dad545c909cfec2d$var$beginGuessing = ()=>{\n    $dad545c909cfec2d$var$updateGameStatus(\"guessing\");\n    const { pokemon: pokemon, selectedPokemon: selectedPokemon } = $dad545c909cfec2d$var$state;\n    const pokemonIndexMax = pokemon.length - 1;\n    const numOfOtherOptions = 3;\n    let guessingOptions = [\n        ...Array(numOfOtherOptions)\n    ].map(()=>pokemon[$dad545c909cfec2d$var$randomNumUpTo(pokemonIndexMax)]);\n    guessingOptions.splice($dad545c909cfec2d$var$randomNumUpTo(numOfOtherOptions), 0, selectedPokemon);\n    const gameTimeout = setTimeout($dad545c909cfec2d$var$finishGame, 3000);\n    $dad545c909cfec2d$var$state.gameTimeout = gameTimeout;\n    const guessingOptionsEl = document.getElementById(\"guessingOptions\");\n    guessingOptions.forEach((pokemonOption)=>{\n        const { name: name } = pokemonOption;\n        const pokemonOptionEl = document.createElement(\"li\");\n        pokemonOptionEl.innerText = name;\n        pokemonOptionEl.addEventListener(\"click\", ()=>{\n            clearTimeout(gameTimeout);\n            $dad545c909cfec2d$var$state.guessedPokemon = pokemonOption;\n            $dad545c909cfec2d$var$finishGame();\n        });\n        guessingOptionsEl.appendChild(pokemonOptionEl);\n    });\n};\nconst $dad545c909cfec2d$var$setupRandomPokemon = ()=>{\n    const selectedPokemon = $dad545c909cfec2d$var$state.pokemon[$dad545c909cfec2d$var$randomNumUpTo($dad545c909cfec2d$var$state.pokemon.length - 1)];\n    $dad545c909cfec2d$var$state.selectedPokemon = selectedPokemon;\n    const { avatarUrl: avatarUrl } = selectedPokemon;\n    const pokemonBoxEl = document.getElementById(\"pokemonBox\");\n    const pokemonImage = document.createElement(\"img\");\n    pokemonImage.src = avatarUrl;\n    pokemonImage.className = \"pokemon-image\";\n    pokemonBoxEl.appendChild(pokemonImage);\n};\nconst $dad545c909cfec2d$var$startGame = ()=>{\n    $dad545c909cfec2d$var$resetHTML();\n    $dad545c909cfec2d$var$setupRandomPokemon();\n    $dad545c909cfec2d$var$beginGuessing();\n};\nconst $dad545c909cfec2d$var$init = async ()=>{\n    const pokemonAPIResponse = await fetch(\"https://beta.pokeapi.co/graphql/v1beta\", {\n        method: \"POST\",\n        body: JSON.stringify({\n            query: `\n          query samplePokeAPIquery {\n              generations: pokemon_v2_generation {\n              name\n              pokemon_species: pokemon_v2_pokemonspecies {\n                id\n                name\n              }\n            }\n          }`\n        })\n    }).then((res)=>res.json()).catch((error)=>{\n        console.log(error);\n    });\n    const { data: { generations: generations } } = pokemonAPIResponse;\n    $dad545c909cfec2d$var$state.generations = generations.reduce((a, { name: name, pokemon_species: pokemon })=>({\n            ...a,\n            [name]: pokemon.map(({ name: name, id: id })=>{\n                const avatarUrl = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${id}.png`;\n                return {\n                    id: id,\n                    name: name,\n                    avatarUrl: avatarUrl\n                };\n            })\n        }), {});\n    const generationNames = Object.keys($dad545c909cfec2d$var$state.generations);\n    $dad545c909cfec2d$var$state.selectedGenerations = [\n        generationNames[0]\n    ];\n    let pokemon = [].concat(...$dad545c909cfec2d$var$state.selectedGenerations.map((selectedGeneration)=>$dad545c909cfec2d$var$state.generations[selectedGeneration]));\n    $dad545c909cfec2d$var$state.pokemon = pokemon;\n    const generationOptionsEl = document.getElementById(\"generationOptions\");\n    generationNames.forEach((generationName, i)=>{\n        const generationOptionEl = document.createElement(\"li\");\n        generationOptionEl.innerText = generationName.split(\"-\")[1];\n        if (i === 0) generationOptionEl.className = \"active\";\n        generationOptionEl.addEventListener(\"click\", (e)=>{\n            const isRemoving = $dad545c909cfec2d$var$state.selectedGenerations.includes(generationName);\n            if ($dad545c909cfec2d$var$state.selectedGenerations.length < 2 && isRemoving) return;\n            e.target.classList.toggle(\"active\");\n            $dad545c909cfec2d$var$state.selectedGenerations = isRemoving ? $dad545c909cfec2d$var$state.selectedGenerations.filter((selectedGeneration)=>selectedGeneration !== generationName) : [\n                ...$dad545c909cfec2d$var$state.selectedGenerations,\n                generationName\n            ];\n            $dad545c909cfec2d$var$state.pokemon = [].concat(...$dad545c909cfec2d$var$state.selectedGenerations.map((generationName)=>$dad545c909cfec2d$var$state.generations[generationName]));\n            clearTimeout($dad545c909cfec2d$var$state.gameTimeout);\n            $dad545c909cfec2d$var$startGame();\n        });\n        generationOptionsEl.appendChild(generationOptionEl);\n    });\n    const startGameButtonEl = document.getElementById(\"startGameButton\");\n    startGameButtonEl.addEventListener(\"click\", $dad545c909cfec2d$var$startGame);\n    $dad545c909cfec2d$var$updateGameStatus(\"ready\");\n};\n// Call our initialization of the application\n$dad545c909cfec2d$var$init();\n\n\n//# sourceMappingURL=index.3b7d60c5.js.map\n","const initialState = {\n  generations: {},\n  selectedGenerations: [],\n  pokemon: [],\n  selectedPokemon: null,\n  guessedPokemon: null,\n  status: \"ready\",\n  correctGuessesStreak: 0,\n  gameTimeout: null,\n};\n\nlet state = { ...initialState };\n\nconst randomNumUpTo = (max) => Math.floor(Math.random() * (max + 1));\n\nconst updateGameStatus = (status) => {\n  state.status = status;\n  const gameContainer = document.getElementById(\"gameContainer\");\n  gameContainer.className = status;\n};\nconst resetHTML = () => {\n  const guessingOptionsEl = document.getElementById(\"guessingOptions\");\n  guessingOptionsEl.innerHTML = \"\";\n\n  const answerEl = document.getElementById(\"answer\");\n  answerEl.innerText = \"\";\n\n  const pokemonImage = document.querySelector(\".pokemon-image\");\n  if (pokemonImage) pokemonImage.remove();\n};\nconst finishGame = () => {\n  const { selectedPokemon, guessedPokemon } = state;\n  const didNotGuess = !guessedPokemon;\n  const guessedCorrectly =\n    selectedPokemon?.id === guessedPokemon?.id && !didNotGuess;\n  const { name } = selectedPokemon;\n\n  const answerEl = document.getElementById(\"answer\");\n  answerEl.innerText = `It's ${name}!`;\n\n  const correctGuessesStreakEl = document.getElementById(\"streakCount\");\n  if (guessedCorrectly) state.correctGuessesStreak++;\n  else state.correctGuessesStreak = 0;\n\n  correctGuessesStreakEl.innerText = state.correctGuessesStreak;\n\n  const {\n    generations,\n    selectedGenerations,\n    pokemon: initialPokemon,\n    correctGuessesStreak,\n    ...restInitialState\n  } = initialState;\n  state = {\n    ...state,\n    ...restInitialState,\n  };\n  updateGameStatus(\"viewing-result\");\n  state.gameTimeout = setTimeout(startGame, 3000);\n};\nconst beginGuessing = () => {\n  updateGameStatus(\"guessing\");\n  const { pokemon, selectedPokemon } = state;\n  const pokemonIndexMax = pokemon.length - 1;\n  const numOfOtherOptions = 3;\n  let guessingOptions = [...Array(numOfOtherOptions)].map(\n    () => pokemon[randomNumUpTo(pokemonIndexMax)]\n  );\n  guessingOptions.splice(randomNumUpTo(numOfOtherOptions), 0, selectedPokemon);\n\n  const gameTimeout = setTimeout(finishGame, 3000);\n  state.gameTimeout = gameTimeout;\n\n  const guessingOptionsEl = document.getElementById(\"guessingOptions\");\n  guessingOptions.forEach((pokemonOption) => {\n    const { name } = pokemonOption;\n\n    const pokemonOptionEl = document.createElement(\"li\");\n    pokemonOptionEl.innerText = name;\n    pokemonOptionEl.addEventListener(\"click\", () => {\n      clearTimeout(gameTimeout);\n      state.guessedPokemon = pokemonOption;\n      finishGame();\n    });\n\n    guessingOptionsEl.appendChild(pokemonOptionEl);\n  });\n};\nconst setupRandomPokemon = () => {\n  const selectedPokemon =\n    state.pokemon[randomNumUpTo(state.pokemon.length - 1)];\n  state.selectedPokemon = selectedPokemon;\n  const { avatarUrl } = selectedPokemon;\n\n  const pokemonBoxEl = document.getElementById(\"pokemonBox\");\n  const pokemonImage = document.createElement(\"img\");\n  pokemonImage.src = avatarUrl;\n  pokemonImage.className = \"pokemon-image\";\n  pokemonBoxEl.appendChild(pokemonImage);\n};\nconst startGame = () => {\n  resetHTML();\n  setupRandomPokemon();\n  beginGuessing();\n};\nconst init = async () => {\n  const pokemonAPIResponse = await fetch(\n    \"https://beta.pokeapi.co/graphql/v1beta\",\n    {\n      method: \"POST\",\n      body: JSON.stringify({\n        query: `\n          query samplePokeAPIquery {\n              generations: pokemon_v2_generation {\n              name\n              pokemon_species: pokemon_v2_pokemonspecies {\n                id\n                name\n              }\n            }\n          }`,\n      }),\n    }\n  )\n    .then((res) => res.json())\n    .catch((error) => {\n      console.log(error);\n    });\n  const {\n    data: { generations },\n  } = pokemonAPIResponse;\n  state.generations = generations.reduce(\n    (a, { name, pokemon_species: pokemon }) => ({\n      ...a,\n      [name]: pokemon.map(({ name, id }) => {\n        const avatarUrl = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${id}.png`;\n        return {\n          id,\n          name,\n          avatarUrl,\n        };\n      }),\n    }),\n    {}\n  );\n  const generationNames = Object.keys(state.generations);\n  state.selectedGenerations = [generationNames[0]];\n\n  let pokemon = [].concat(\n    ...state.selectedGenerations.map(\n      (selectedGeneration) => state.generations[selectedGeneration]\n    )\n  );\n\n  state.pokemon = pokemon;\n\n  const generationOptionsEl = document.getElementById(\"generationOptions\");\n  generationNames.forEach((generationName, i) => {\n    const generationOptionEl = document.createElement(\"li\");\n    generationOptionEl.innerText = generationName.split(\"-\")[1];\n    if (i === 0) generationOptionEl.className = \"active\";\n\n    generationOptionEl.addEventListener(\"click\", (e) => {\n      const isRemoving = state.selectedGenerations.includes(generationName);\n      if (state.selectedGenerations.length < 2 && isRemoving) return;\n      e.target.classList.toggle(\"active\");\n      state.selectedGenerations = isRemoving\n        ? state.selectedGenerations.filter(\n            (selectedGeneration) => selectedGeneration !== generationName\n          )\n        : [...state.selectedGenerations, generationName];\n      state.pokemon = [].concat(\n        ...state.selectedGenerations.map(\n          (generationName) => state.generations[generationName]\n        )\n      );\n      clearTimeout(state.gameTimeout);\n      startGame();\n    });\n\n    generationOptionsEl.appendChild(generationOptionEl);\n  });\n\n  const startGameButtonEl = document.getElementById(\"startGameButton\");\n  startGameButtonEl.addEventListener(\"click\", startGame);\n\n  updateGameStatus(\"ready\");\n};\n\n// Call our initialization of the application\ninit();\n"],"names":["$dad545c909cfec2d$var$initialState","generations","selectedGenerations","pokemon","selectedPokemon","guessedPokemon","status","correctGuessesStreak","gameTimeout","$dad545c909cfec2d$var$state","$dad545c909cfec2d$var$randomNumUpTo","max","Math","floor","random","$dad545c909cfec2d$var$updateGameStatus","gameContainer","document","getElementById","className","$dad545c909cfec2d$var$resetHTML","guessingOptionsEl","innerHTML","answerEl","innerText","pokemonImage","querySelector","remove","$dad545c909cfec2d$var$finishGame","guessedCorrectly","id","name","correctGuessesStreakEl","initialPokemon","restInitialState","setTimeout","$dad545c909cfec2d$var$startGame","$dad545c909cfec2d$var$beginGuessing","pokemonIndexMax","length","guessingOptions","map","splice","forEach","pokemonOption","pokemonOptionEl","createElement","addEventListener","clearTimeout","appendChild","$dad545c909cfec2d$var$setupRandomPokemon","avatarUrl","pokemonBoxEl","src","$dad545c909cfec2d$var$init","data","fetch","method","body","JSON","stringify","query","then","res","json","catch","error","console","log","reduce","a","pokemon_species","generationNames","Object","keys","concat","selectedGeneration","generationOptionsEl","generationName","i","generationOptionEl","split","e","isRemoving","includes","target","classList","toggle","filter","startGameButtonEl"],"version":3,"file":"index.3b7d60c5.js.map"}